

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Jul 21 23:47:54 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0088                     	;# 
   250  0089                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  008F                     	;# 
   255  0090                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  0105                     	;# 
   274  0107                     	;# 
   275  0108                     	;# 
   276  0109                     	;# 
   277  010C                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  0185                     	;# 
   283  0187                     	;# 
   284  0188                     	;# 
   285  0189                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288  0000                     	;# 
   289  0001                     	;# 
   290  0002                     	;# 
   291  0003                     	;# 
   292  0004                     	;# 
   293  0005                     	;# 
   294  0006                     	;# 
   295  0007                     	;# 
   296  0008                     	;# 
   297  0009                     	;# 
   298  000A                     	;# 
   299  000B                     	;# 
   300  000C                     	;# 
   301  000D                     	;# 
   302  000E                     	;# 
   303  000E                     	;# 
   304  000F                     	;# 
   305  0010                     	;# 
   306  0011                     	;# 
   307  0012                     	;# 
   308  0013                     	;# 
   309  0014                     	;# 
   310  0015                     	;# 
   311  0015                     	;# 
   312  0016                     	;# 
   313  0017                     	;# 
   314  0018                     	;# 
   315  0019                     	;# 
   316  001A                     	;# 
   317  001B                     	;# 
   318  001B                     	;# 
   319  001C                     	;# 
   320  001D                     	;# 
   321  001E                     	;# 
   322  001F                     	;# 
   323  0081                     	;# 
   324  0085                     	;# 
   325  0086                     	;# 
   326  0087                     	;# 
   327  0088                     	;# 
   328  0089                     	;# 
   329  008C                     	;# 
   330  008D                     	;# 
   331  008E                     	;# 
   332  008F                     	;# 
   333  0090                     	;# 
   334  0091                     	;# 
   335  0092                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0094                     	;# 
   340  0095                     	;# 
   341  0096                     	;# 
   342  0097                     	;# 
   343  0098                     	;# 
   344  0099                     	;# 
   345  009A                     	;# 
   346  009B                     	;# 
   347  009C                     	;# 
   348  009D                     	;# 
   349  009E                     	;# 
   350  009F                     	;# 
   351  0105                     	;# 
   352  0107                     	;# 
   353  0108                     	;# 
   354  0109                     	;# 
   355  010C                     	;# 
   356  010C                     	;# 
   357  010D                     	;# 
   358  010E                     	;# 
   359  010F                     	;# 
   360  0185                     	;# 
   361  0187                     	;# 
   362  0188                     	;# 
   363  0189                     	;# 
   364  018C                     	;# 
   365  018D                     	;# 
   366                           
   367                           	psect	idataBANK0
   368  0117                     __pidataBANK0:
   369                           
   370                           ;initializer for _T_TABLE
   371  0117  343F               	retlw	63
   372  0118  3406               	retlw	6
   373  0119  345B               	retlw	91
   374  011A  344F               	retlw	79
   375  011B  3466               	retlw	102
   376  011C  346D               	retlw	109
   377  011D  347D               	retlw	125
   378  011E  3407               	retlw	7
   379  011F  347F               	retlw	127
   380  0120  346F               	retlw	111
   381  0121  3477               	retlw	119
   382  0122  347C               	retlw	124
   383  0123  3439               	retlw	57
   384  0124  345E               	retlw	94
   385  0125  3479               	retlw	121
   386  0126  3471               	retlw	113
   387  0006                     _PORTB	set	6
   388  0005                     _PORTA	set	5
   389  001E                     _ADRESH	set	30
   390  000C                     _PIR1bits	set	12
   391  0001                     _TMR0	set	1
   392  0008                     _PORTD	set	8
   393  0005                     _PORTAbits	set	5
   394  0009                     _PORTE	set	9
   395  0006                     _PORTBbits	set	6
   396  000B                     _INTCONbits	set	11
   397  0007                     _PORTC	set	7
   398  0009                     _PORTEbits	set	9
   399  001F                     _ADCON0bits	set	31
   400  0095                     _WPUB	set	149
   401  0081                     _OPTION_REGbits	set	129
   402  0089                     _TRISE	set	137
   403  0088                     _TRISD	set	136
   404  0087                     _TRISC	set	135
   405  0086                     _TRISB	set	134
   406  0085                     _TRISA	set	133
   407  0096                     _IOCB	set	150
   408  008C                     _PIE1bits	set	140
   409  009F                     _ADCON1bits	set	159
   410  008F                     _OSCCONbits	set	143
   411  0188                     _ANSEL	set	392
   412  0189                     _ANSELH	set	393
   413                           
   414                           	psect	cinit
   415  000F                     start_initialization:	
   416                           ; #config settings
   417                           
   418  000F                     __initialization:
   419                           
   420                           ; Initialize objects allocated to BANK0
   421  000F  1383               	bcf	3,7	;select IRP bank0
   422  0010  3030               	movlw	low (__pdataBANK0+16)
   423  0011  00FD               	movwf	btemp+-1
   424  0012  3001               	movlw	high __pidataBANK0
   425  0013  00FE               	movwf	btemp
   426  0014  3017               	movlw	low __pidataBANK0
   427  0015  00FF               	movwf	btemp+1
   428  0016  3020               	movlw	low __pdataBANK0
   429  0017  0084               	movwf	4
   430  0018  120A  118A  20F7  120A  118A  	fcall	init_ram0
   431                           
   432                           ; Clear objects allocated to COMMON
   433  001D  01F8               	clrf	__pbssCOMMON& (0+127)
   434  001E  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   435  001F  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   436  0020  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
   437  0021  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
   438  0022                     end_of_initialization:	
   439                           ;End of C runtime variable initialization code
   440                           
   441  0022                     __end_of__initialization:
   442  0022  0183               	clrf	3
   443  0023  120A  118A  2826   	ljmp	_main	;jump to C main() function
   444                           
   445                           	psect	bssCOMMON
   446  0078                     __pbssCOMMON:
   447  0078                     _y:
   448  0078                     	ds	1
   449  0079                     _x:
   450  0079                     	ds	1
   451  007A                     _ADC_R:
   452  007A                     	ds	1
   453  007B                     _DEC:
   454  007B                     	ds	1
   455  007C                     _UNIT:
   456  007C                     	ds	1
   457                           
   458                           	psect	dataBANK0
   459  0020                     __pdataBANK0:
   460  0020                     _T_TABLE:
   461  0020                     	ds	16
   462                           
   463                           	psect	inittext
   464  00F3                     init_fetch0:	
   465                           ;	Called with low address in FSR and high address in W
   466                           
   467  00F3  087E               	movf	btemp,w
   468  00F4  008A               	movwf	10
   469  00F5  087F               	movf	btemp+1,w
   470  00F6  0082               	movwf	2
   471  00F7                     init_ram0:	
   472                           ;Called with:
   473                           ;	high address of idata address in btemp 
   474                           ;	low address of idata address in btemp+1 
   475                           ;	low address of data in FSR
   476                           ;	high address + 1 of data in btemp-1
   477                           
   478  00F7  120A  118A  20F3  120A  118A  	fcall	init_fetch0
   479  00FC  0080               	movwf	0
   480  00FD  0A84               	incf	4,f
   481  00FE  0804               	movf	4,w
   482  00FF  067D               	xorwf	btemp+-1,w
   483  0100  1903               	btfsc	3,2
   484  0101  3400               	retlw	0
   485  0102  0AFF               	incf	btemp+1,f
   486  0103  1903               	btfsc	3,2
   487  0104  0AFE               	incf	btemp,f
   488  0105  28F7               	goto	init_ram0
   489                           
   490                           	psect	cstackCOMMON
   491  0070                     __pcstackCOMMON:
   492  0070                     ?_initCONFIG:
   493  0070                     ?_configTMR0:	
   494                           ; 1 bytes @ 0x0
   495                           
   496  0070                     ?_ADC_START:	
   497                           ; 1 bytes @ 0x0
   498                           
   499  0070                     ?_SEG_HEX:	
   500                           ; 1 bytes @ 0x0
   501                           
   502  0070                     ?_main:	
   503                           ; 1 bytes @ 0x0
   504                           
   505  0070                     ?_ISR:	
   506                           ; 1 bytes @ 0x0
   507                           
   508  0070                     ??_ISR:	
   509                           ; 1 bytes @ 0x0
   510                           
   511                           
   512                           ; 1 bytes @ 0x0
   513  0070                     	ds	3
   514  0073                     ??_initCONFIG:
   515  0073                     ??_configTMR0:	
   516                           ; 1 bytes @ 0x3
   517                           
   518  0073                     ??_ADC_START:	
   519                           ; 1 bytes @ 0x3
   520                           
   521  0073                     ??_SEG_HEX:	
   522                           ; 1 bytes @ 0x3
   523                           
   524                           
   525                           ; 1 bytes @ 0x3
   526  0073                     	ds	1
   527  0074                     SEG_HEX@VAR:
   528                           
   529                           ; 1 bytes @ 0x4
   530  0074                     	ds	1
   531  0075                     SEG_HEX@FER:
   532                           
   533                           ; 1 bytes @ 0x5
   534  0075                     	ds	1
   535  0076                     ??_main:
   536                           
   537                           ; 1 bytes @ 0x6
   538  0076                     	ds	2
   539                           
   540                           	psect	maintext
   541  0026                     __pmaintext:	
   542 ;;
   543 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   544 ;;
   545 ;; *************** function _main *****************
   546 ;; Defined at:
   547 ;;		line 44 in file "main.c"
   548 ;; Parameters:    Size  Location     Type
   549 ;;		None
   550 ;; Auto vars:     Size  Location     Type
   551 ;;		None
   552 ;; Return value:  Size  Location     Type
   553 ;;                  1    wreg      void 
   554 ;; Registers used:
   555 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   556 ;; Tracked objects:
   557 ;;		On entry : B00/0
   558 ;;		On exit  : 0/0
   559 ;;		Unchanged: 0/0
   560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   561 ;;      Params:         0       0       0       0       0
   562 ;;      Locals:         0       0       0       0       0
   563 ;;      Temps:          2       0       0       0       0
   564 ;;      Totals:         2       0       0       0       0
   565 ;;Total ram usage:        2 bytes
   566 ;; Hardware stack levels required when called: 2
   567 ;; This function calls:
   568 ;;		_ADC_START
   569 ;;		_SEG_HEX
   570 ;;		_configTMR0
   571 ;;		_initCONFIG
   572 ;; This function is called by:
   573 ;;		Startup code after reset
   574 ;; This function uses a non-reentrant model
   575 ;;
   576                           
   577                           
   578                           ;psect for function _main
   579  0026                     _main:
   580  0026                     l782:	
   581                           ;incstack = 0
   582                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   583                           
   584                           
   585                           ;main.c: 45:     initCONFIG();
   586  0026  120A  118A  206E  120A  118A  	fcall	_initCONFIG
   587  002B                     l784:
   588                           
   589                           ;main.c: 46:     ADCON0bits.GO = 1;
   590  002B  1283               	bcf	3,5	;RP0=0, select bank0
   591  002C  1303               	bcf	3,6	;RP1=0, select bank0
   592  002D  149F               	bsf	31,1	;volatile
   593                           
   594                           ;main.c: 47:     configTMR0();
   595  002E  120A  118A  2127  120A  118A  	fcall	_configTMR0
   596  0033                     l77:	
   597                           ;main.c: 48:     while (1){
   598                           
   599                           
   600                           ;main.c: 49:         ADC_START();
   601  0033  120A  118A  2106  120A  118A  	fcall	_ADC_START
   602  0038                     l786:
   603                           
   604                           ;main.c: 50:         x = ADC_R & 0x0F;
   605  0038  087A               	movf	_ADC_R,w
   606  0039  390F               	andlw	15
   607  003A  00F6               	movwf	??_main
   608  003B  0876               	movf	??_main,w
   609  003C  00F9               	movwf	_x
   610  003D                     l788:
   611                           
   612                           ;main.c: 51:         y = (ADC_R >> 4) & 0x0F;
   613  003D  087A               	movf	_ADC_R,w
   614  003E  00F6               	movwf	??_main
   615  003F  3004               	movlw	4
   616  0040                     u25:
   617  0040  1003               	clrc
   618  0041  0CF6               	rrf	??_main,f
   619  0042  3EFF               	addlw	-1
   620  0043  1D03               	skipz
   621  0044  2840               	goto	u25
   622  0045  0876               	movf	??_main,w
   623  0046  390F               	andlw	15
   624  0047  00F7               	movwf	??_main+1
   625  0048  0877               	movf	??_main+1,w
   626  0049  00F8               	movwf	_y
   627  004A                     l790:
   628                           
   629                           ;main.c: 52:         UNIT = SEG_HEX(x);
   630  004A  0879               	movf	_x,w
   631  004B  120A  118A  2133  120A  118A  	fcall	_SEG_HEX
   632  0050  00F6               	movwf	??_main
   633  0051  0876               	movf	??_main,w
   634  0052  00FC               	movwf	_UNIT
   635  0053                     l792:
   636                           
   637                           ;main.c: 53:         DEC = SEG_HEX(y);
   638  0053  0878               	movf	_y,w
   639  0054  120A  118A  2133  120A  118A  	fcall	_SEG_HEX
   640  0059  00F6               	movwf	??_main
   641  005A  0876               	movf	??_main,w
   642  005B  00FB               	movwf	_DEC
   643  005C                     l794:
   644                           
   645                           ;main.c: 54:         PORTEbits.RE2 = (ADC_R > PORTC)? 1:0;
   646  005C  087A               	movf	_ADC_R,w
   647  005D  1283               	bcf	3,5	;RP0=0, select bank0
   648  005E  1303               	bcf	3,6	;RP1=0, select bank0
   649  005F  0207               	subwf	7,w	;volatile
   650  0060  1C03               	skipc
   651  0061  2863               	goto	u31
   652  0062  2867               	goto	u30
   653  0063                     u31:
   654  0063  1283               	bcf	3,5	;RP0=0, select bank0
   655  0064  1303               	bcf	3,6	;RP1=0, select bank0
   656  0065  1509               	bsf	9,2	;volatile
   657  0066  286A               	goto	u44
   658  0067                     u30:
   659  0067  1283               	bcf	3,5	;RP0=0, select bank0
   660  0068  1303               	bcf	3,6	;RP1=0, select bank0
   661  0069  1109               	bcf	9,2	;volatile
   662  006A                     u44:
   663  006A  2833               	goto	l77
   664  006B  120A  118A  280C   	ljmp	start
   665  006E                     __end_of_main:
   666                           
   667                           	psect	text1
   668  006E                     __ptext1:	
   669 ;; *************** function _initCONFIG *****************
   670 ;; Defined at:
   671 ;;		line 94 in file "main.c"
   672 ;; Parameters:    Size  Location     Type
   673 ;;		None
   674 ;; Auto vars:     Size  Location     Type
   675 ;;		None
   676 ;; Return value:  Size  Location     Type
   677 ;;                  1    wreg      void 
   678 ;; Registers used:
   679 ;;		wreg, status,2, status,0
   680 ;; Tracked objects:
   681 ;;		On entry : 0/0
   682 ;;		On exit  : 0/0
   683 ;;		Unchanged: 0/0
   684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   685 ;;      Params:         0       0       0       0       0
   686 ;;      Locals:         0       0       0       0       0
   687 ;;      Temps:          1       0       0       0       0
   688 ;;      Totals:         1       0       0       0       0
   689 ;;Total ram usage:        1 bytes
   690 ;; Hardware stack levels used: 1
   691 ;; Hardware stack levels required when called: 1
   692 ;; This function calls:
   693 ;;		Nothing
   694 ;; This function is called by:
   695 ;;		_main
   696 ;; This function uses a non-reentrant model
   697 ;;
   698                           
   699                           
   700                           ;psect for function _initCONFIG
   701  006E                     _initCONFIG:
   702  006E                     l704:	
   703                           ;incstack = 0
   704                           ; Regs used in _initCONFIG: [wreg+status,2+status,0]
   705                           
   706                           
   707                           ;main.c: 95:     OSCCONbits.IRCF2 = 1;
   708  006E  1683               	bsf	3,5	;RP0=1, select bank1
   709  006F  1303               	bcf	3,6	;RP1=0, select bank1
   710  0070  170F               	bsf	15,6	;volatile
   711                           
   712                           ;main.c: 96:     OSCCONbits.IRCF1 = 1;
   713  0071  168F               	bsf	15,5	;volatile
   714                           
   715                           ;main.c: 97:     OSCCONbits.IRCF0 = 0;
   716  0072  120F               	bcf	15,4	;volatile
   717                           
   718                           ;main.c: 98:     OSCCONbits.SCS = 1;
   719  0073  140F               	bsf	15,0	;volatile
   720                           
   721                           ;main.c: 100:     ADCON1bits.ADFM=0;
   722  0074  139F               	bcf	31,7	;volatile
   723                           
   724                           ;main.c: 101:     ADCON1bits.VCFG0=0;
   725  0075  121F               	bcf	31,4	;volatile
   726                           
   727                           ;main.c: 102:     ADCON1bits.VCFG1=0;
   728  0076  129F               	bcf	31,5	;volatile
   729  0077                     l706:
   730                           
   731                           ;main.c: 103:     ADCON0bits.ADCS= 0b010;
   732  0077  1283               	bcf	3,5	;RP0=0, select bank0
   733  0078  1303               	bcf	3,6	;RP1=0, select bank0
   734  0079  081F               	movf	31,w	;volatile
   735  007A  393F               	andlw	-193
   736  007B  3880               	iorlw	128
   737  007C  009F               	movwf	31	;volatile
   738                           
   739                           ;main.c: 104:     ADCON0bits.CHS = 0;
   740  007D  30C3               	movlw	-61
   741  007E  059F               	andwf	31,f	;volatile
   742  007F                     l708:
   743                           
   744                           ;main.c: 105:     _delay((unsigned long)((50)*(4000000/4000000.0)));
   745  007F  3010               	movlw	16
   746  0080  00F3               	movwf	??_initCONFIG
   747  0081                     u127:
   748  0081  0BF3               	decfsz	??_initCONFIG,f
   749  0082  2881               	goto	u127
   750  0083  0000               	nop
   751  0084                     l710:
   752                           
   753                           ;main.c: 106:     ADCON0bits.ADON = 1;
   754  0084  1283               	bcf	3,5	;RP0=0, select bank0
   755  0085  1303               	bcf	3,6	;RP1=0, select bank0
   756  0086  141F               	bsf	31,0	;volatile
   757  0087                     l712:
   758                           
   759                           ;main.c: 109:     INTCONbits.GIE = 1;
   760  0087  178B               	bsf	11,7	;volatile
   761  0088                     l714:
   762                           
   763                           ;main.c: 110:     INTCONbits.PEIE =1;
   764  0088  170B               	bsf	11,6	;volatile
   765  0089                     l716:
   766                           
   767                           ;main.c: 111:     INTCONbits.T0IE = 1;
   768  0089  168B               	bsf	11,5	;volatile
   769  008A                     l718:
   770                           
   771                           ;main.c: 112:     INTCONbits.T0IF =0;
   772  008A  110B               	bcf	11,2	;volatile
   773  008B                     l720:
   774                           
   775                           ;main.c: 115:     PIE1bits.ADIE=1;
   776  008B  1683               	bsf	3,5	;RP0=1, select bank1
   777  008C  1303               	bcf	3,6	;RP1=0, select bank1
   778  008D  170C               	bsf	12,6	;volatile
   779  008E                     l722:
   780                           
   781                           ;main.c: 116:     PIR1bits.ADIF=0;
   782  008E  1283               	bcf	3,5	;RP0=0, select bank0
   783  008F  1303               	bcf	3,6	;RP1=0, select bank0
   784  0090  130C               	bcf	12,6	;volatile
   785  0091                     l724:
   786                           
   787                           ;main.c: 119:     INTCONbits.RBIE = 1;
   788  0091  158B               	bsf	11,3	;volatile
   789  0092                     l726:
   790                           
   791                           ;main.c: 120:     INTCONbits.RBIF = 0;
   792  0092  100B               	bcf	11,0	;volatile
   793  0093                     l728:
   794                           
   795                           ;main.c: 121:     IOCB = 0b01100000;
   796  0093  3060               	movlw	96
   797  0094  1683               	bsf	3,5	;RP0=1, select bank1
   798  0095  1303               	bcf	3,6	;RP1=0, select bank1
   799  0096  0096               	movwf	22	;volatile
   800  0097                     l730:
   801                           
   802                           ;main.c: 122:     TRISA = 0b00000001;
   803  0097  3001               	movlw	1
   804  0098  0085               	movwf	5	;volatile
   805  0099                     l732:
   806                           
   807                           ;main.c: 123:     TRISB = 0b01100000;
   808  0099  3060               	movlw	96
   809  009A  0086               	movwf	6	;volatile
   810  009B                     l734:
   811                           
   812                           ;main.c: 124:     TRISC = 0;
   813  009B  0187               	clrf	7	;volatile
   814  009C                     l736:
   815                           
   816                           ;main.c: 125:     TRISD = 0;
   817  009C  0188               	clrf	8	;volatile
   818  009D                     l738:
   819                           
   820                           ;main.c: 126:     TRISE = 0;
   821  009D  0189               	clrf	9	;volatile
   822  009E                     l740:
   823                           
   824                           ;main.c: 128:     PORTA = 0;
   825  009E  1283               	bcf	3,5	;RP0=0, select bank0
   826  009F  1303               	bcf	3,6	;RP1=0, select bank0
   827  00A0  0185               	clrf	5	;volatile
   828  00A1                     l742:
   829                           
   830                           ;main.c: 129:     PORTB = 0b01100000;
   831  00A1  3060               	movlw	96
   832  00A2  0086               	movwf	6	;volatile
   833  00A3                     l744:
   834                           
   835                           ;main.c: 130:     PORTC = 0;
   836  00A3  0187               	clrf	7	;volatile
   837  00A4                     l746:
   838                           
   839                           ;main.c: 131:     PORTD = 0;
   840  00A4  0188               	clrf	8	;volatile
   841  00A5                     l748:
   842                           
   843                           ;main.c: 132:     PORTE = 0;
   844  00A5  0189               	clrf	9	;volatile
   845  00A6                     l750:
   846                           
   847                           ;main.c: 133:     ANSELH = 0;
   848  00A6  1683               	bsf	3,5	;RP0=1, select bank3
   849  00A7  1703               	bsf	3,6	;RP1=1, select bank3
   850  00A8  0189               	clrf	9	;volatile
   851  00A9                     l752:
   852                           
   853                           ;main.c: 134:     ANSEL = 0b00000001;
   854  00A9  3001               	movlw	1
   855  00AA  0088               	movwf	8	;volatile
   856  00AB                     l754:
   857                           
   858                           ;main.c: 135:     OPTION_REGbits.nRBPU = 0;
   859  00AB  1683               	bsf	3,5	;RP0=1, select bank1
   860  00AC  1303               	bcf	3,6	;RP1=0, select bank1
   861  00AD  1381               	bcf	1,7	;volatile
   862  00AE                     l756:
   863                           
   864                           ;main.c: 136:     WPUB = 0b01100000;
   865  00AE  3060               	movlw	96
   866  00AF  0095               	movwf	21	;volatile
   867  00B0                     l96:
   868  00B0  0008               	return
   869  00B1                     __end_of_initCONFIG:
   870                           
   871                           	psect	text2
   872  0127                     __ptext2:	
   873 ;; *************** function _configTMR0 *****************
   874 ;; Defined at:
   875 ;;		line 140 in file "main.c"
   876 ;; Parameters:    Size  Location     Type
   877 ;;		None
   878 ;; Auto vars:     Size  Location     Type
   879 ;;		None
   880 ;; Return value:  Size  Location     Type
   881 ;;                  1    wreg      void 
   882 ;; Registers used:
   883 ;;		wreg
   884 ;; Tracked objects:
   885 ;;		On entry : 0/0
   886 ;;		On exit  : 0/0
   887 ;;		Unchanged: 0/0
   888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   889 ;;      Params:         0       0       0       0       0
   890 ;;      Locals:         0       0       0       0       0
   891 ;;      Temps:          0       0       0       0       0
   892 ;;      Totals:         0       0       0       0       0
   893 ;;Total ram usage:        0 bytes
   894 ;; Hardware stack levels used: 1
   895 ;; Hardware stack levels required when called: 1
   896 ;; This function calls:
   897 ;;		Nothing
   898 ;; This function is called by:
   899 ;;		_main
   900 ;; This function uses a non-reentrant model
   901 ;;
   902                           
   903                           
   904                           ;psect for function _configTMR0
   905  0127                     _configTMR0:
   906  0127                     l760:	
   907                           ;incstack = 0
   908                           ; Regs used in _configTMR0: [wreg]
   909                           
   910                           
   911                           ;main.c: 141:     OPTION_REGbits.T0CS = 0;
   912  0127  1683               	bsf	3,5	;RP0=1, select bank1
   913  0128  1303               	bcf	3,6	;RP1=0, select bank1
   914  0129  1281               	bcf	1,5	;volatile
   915                           
   916                           ;main.c: 142:     OPTION_REGbits.PSA = 0;
   917  012A  1181               	bcf	1,3	;volatile
   918                           
   919                           ;main.c: 143:     OPTION_REGbits.PS2 = 1;
   920  012B  1501               	bsf	1,2	;volatile
   921                           
   922                           ;main.c: 144:     OPTION_REGbits.PS1 = 1;
   923  012C  1481               	bsf	1,1	;volatile
   924                           
   925                           ;main.c: 145:     OPTION_REGbits.PS0 = 1;
   926  012D  1401               	bsf	1,0	;volatile
   927  012E                     l762:
   928                           
   929                           ;main.c: 146:     TMR0 = 217;
   930  012E  30D9               	movlw	217
   931  012F  1283               	bcf	3,5	;RP0=0, select bank0
   932  0130  1303               	bcf	3,6	;RP1=0, select bank0
   933  0131  0081               	movwf	1	;volatile
   934  0132                     l99:
   935  0132  0008               	return
   936  0133                     __end_of_configTMR0:
   937                           
   938                           	psect	text3
   939  0133                     __ptext3:	
   940 ;; *************** function _SEG_HEX *****************
   941 ;; Defined at:
   942 ;;		line 31 in file "segment.c"
   943 ;; Parameters:    Size  Location     Type
   944 ;;  VAR             1    wreg     unsigned char 
   945 ;; Auto vars:     Size  Location     Type
   946 ;;  VAR             1    4[COMMON] unsigned char 
   947 ;;  FER             1    5[COMMON] unsigned char 
   948 ;; Return value:  Size  Location     Type
   949 ;;                  1    wreg      unsigned char 
   950 ;; Registers used:
   951 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   952 ;; Tracked objects:
   953 ;;		On entry : 0/0
   954 ;;		On exit  : 0/0
   955 ;;		Unchanged: 0/0
   956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   957 ;;      Params:         0       0       0       0       0
   958 ;;      Locals:         2       0       0       0       0
   959 ;;      Temps:          1       0       0       0       0
   960 ;;      Totals:         3       0       0       0       0
   961 ;;Total ram usage:        3 bytes
   962 ;; Hardware stack levels used: 1
   963 ;; Hardware stack levels required when called: 1
   964 ;; This function calls:
   965 ;;		Nothing
   966 ;; This function is called by:
   967 ;;		_main
   968 ;; This function uses a non-reentrant model
   969 ;;
   970                           
   971                           
   972                           ;psect for function _SEG_HEX
   973  0133                     _SEG_HEX:
   974                           
   975                           ;incstack = 0
   976                           ; Regs used in _SEG_HEX: [wreg-fsr0h+status,2+status,0]
   977                           ;SEG_HEX@VAR stored from wreg
   978  0133  00F4               	movwf	SEG_HEX@VAR
   979  0134                     l776:
   980                           
   981                           ;segment.c: 32:     uint8_t FER = T_TABLE [VAR];
   982  0134  0874               	movf	SEG_HEX@VAR,w
   983  0135  3E20               	addlw	(low (_T_TABLE| 0))& (0+255)
   984  0136  0084               	movwf	4
   985  0137  1383               	bcf	3,7	;select IRP bank0
   986  0138  0800               	movf	0,w
   987  0139  00F3               	movwf	??_SEG_HEX
   988  013A  0873               	movf	??_SEG_HEX,w
   989  013B  00F5               	movwf	SEG_HEX@FER
   990  013C                     l778:
   991                           
   992                           ;segment.c: 33:     return FER;
   993  013C  0875               	movf	SEG_HEX@FER,w
   994  013D                     l112:
   995  013D  0008               	return
   996  013E                     __end_of_SEG_HEX:
   997                           
   998                           	psect	text4
   999  0106                     __ptext4:	
  1000 ;; *************** function _ADC_START *****************
  1001 ;; Defined at:
  1002 ;;		line 15 in file "adc.c"
  1003 ;; Parameters:    Size  Location     Type
  1004 ;;		None
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;		None
  1007 ;; Return value:  Size  Location     Type
  1008 ;;                  1    wreg      void 
  1009 ;; Registers used:
  1010 ;;		wreg, status,2, status,0
  1011 ;; Tracked objects:
  1012 ;;		On entry : 0/0
  1013 ;;		On exit  : 0/0
  1014 ;;		Unchanged: 0/0
  1015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1016 ;;      Params:         0       0       0       0       0
  1017 ;;      Locals:         0       0       0       0       0
  1018 ;;      Temps:          1       0       0       0       0
  1019 ;;      Totals:         1       0       0       0       0
  1020 ;;Total ram usage:        1 bytes
  1021 ;; Hardware stack levels used: 1
  1022 ;; Hardware stack levels required when called: 1
  1023 ;; This function calls:
  1024 ;;		Nothing
  1025 ;; This function is called by:
  1026 ;;		_main
  1027 ;; This function uses a non-reentrant model
  1028 ;;
  1029                           
  1030                           
  1031                           ;psect for function _ADC_START
  1032  0106                     _ADC_START:
  1033  0106                     l766:	
  1034                           ;incstack = 0
  1035                           ; Regs used in _ADC_START: [wreg+status,2+status,0]
  1036                           
  1037                           
  1038                           ;adc.c: 16:     if (ADCON0bits.GO == 0){
  1039  0106  1283               	bcf	3,5	;RP0=0, select bank0
  1040  0107  1303               	bcf	3,6	;RP1=0, select bank0
  1041  0108  189F               	btfsc	31,1	;volatile
  1042  0109  290B               	goto	u11
  1043  010A  290C               	goto	u10
  1044  010B                     u11:
  1045  010B  2916               	goto	l107
  1046  010C                     u10:
  1047  010C                     l768:
  1048                           
  1049                           ;adc.c: 17:         ADCON0bits.CHS = 0;
  1050  010C  30C3               	movlw	-61
  1051  010D  059F               	andwf	31,f	;volatile
  1052  010E                     l770:
  1053                           
  1054                           ;adc.c: 18:         _delay((unsigned long)((200)*(4000000/4000000.0)));
  1055  010E  3042               	movlw	66
  1056  010F  00F3               	movwf	??_ADC_START
  1057  0110                     u137:
  1058  0110  0BF3               	decfsz	??_ADC_START,f
  1059  0111  2910               	goto	u137
  1060  0112  0000               	nop
  1061  0113                     l772:
  1062                           
  1063                           ;adc.c: 19:         ADCON0bits.GO = 1;
  1064  0113  1283               	bcf	3,5	;RP0=0, select bank0
  1065  0114  1303               	bcf	3,6	;RP1=0, select bank0
  1066  0115  149F               	bsf	31,1	;volatile
  1067  0116                     l107:
  1068  0116  0008               	return
  1069  0117                     __end_of_ADC_START:
  1070                           
  1071                           	psect	text5
  1072  00B1                     __ptext5:	
  1073 ;; *************** function _ISR *****************
  1074 ;; Defined at:
  1075 ;;		line 61 in file "main.c"
  1076 ;; Parameters:    Size  Location     Type
  1077 ;;		None
  1078 ;; Auto vars:     Size  Location     Type
  1079 ;;		None
  1080 ;; Return value:  Size  Location     Type
  1081 ;;                  1    wreg      void 
  1082 ;; Registers used:
  1083 ;;		wreg, status,2, status,0
  1084 ;; Tracked objects:
  1085 ;;		On entry : 0/0
  1086 ;;		On exit  : 0/0
  1087 ;;		Unchanged: 0/0
  1088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1089 ;;      Params:         0       0       0       0       0
  1090 ;;      Locals:         0       0       0       0       0
  1091 ;;      Temps:          3       0       0       0       0
  1092 ;;      Totals:         3       0       0       0       0
  1093 ;;Total ram usage:        3 bytes
  1094 ;; Hardware stack levels used: 1
  1095 ;; This function calls:
  1096 ;;		Nothing
  1097 ;; This function is called by:
  1098 ;;		Interrupt level 1
  1099 ;; This function uses a non-reentrant model
  1100 ;;
  1101                           
  1102                           
  1103                           ;psect for function _ISR
  1104  00B1                     _ISR:
  1105  00B1                     i1l796:
  1106                           
  1107                           ;main.c: 62:     if (INTCONbits.RBIF){
  1108  00B1  1C0B               	btfss	11,0	;volatile
  1109  00B2  28B4               	goto	u5_21
  1110  00B3  28B5               	goto	u5_20
  1111  00B4                     u5_21:
  1112  00B4  28C6               	goto	i1l808
  1113  00B5                     u5_20:
  1114  00B5                     i1l798:
  1115                           
  1116                           ;main.c: 63:         if (PORTBbits.RB5 == 0){
  1117  00B5  1283               	bcf	3,5	;RP0=0, select bank0
  1118  00B6  1303               	bcf	3,6	;RP1=0, select bank0
  1119  00B7  1A86               	btfsc	6,5	;volatile
  1120  00B8  28BA               	goto	u6_21
  1121  00B9  28BB               	goto	u6_20
  1122  00BA                     u6_21:
  1123  00BA  28BF               	goto	i1l802
  1124  00BB                     u6_20:
  1125  00BB                     i1l800:
  1126                           
  1127                           ;main.c: 64:             PORTC++;
  1128  00BB  3001               	movlw	1
  1129  00BC  00F0               	movwf	??_ISR
  1130  00BD  0870               	movf	??_ISR,w
  1131  00BE  0787               	addwf	7,f	;volatile
  1132  00BF                     i1l802:
  1133                           
  1134                           ;main.c: 66:         if (PORTBbits.RB6 == 0){
  1135  00BF  1B06               	btfsc	6,6	;volatile
  1136  00C0  28C2               	goto	u7_21
  1137  00C1  28C3               	goto	u7_20
  1138  00C2                     u7_21:
  1139  00C2  28C5               	goto	i1l806
  1140  00C3                     u7_20:
  1141  00C3                     i1l804:
  1142                           
  1143                           ;main.c: 67:             PORTC--;
  1144  00C3  3001               	movlw	1
  1145  00C4  0287               	subwf	7,f	;volatile
  1146  00C5                     i1l806:
  1147                           
  1148                           ;main.c: 69:         INTCONbits.RBIF = 0;
  1149  00C5  100B               	bcf	11,0	;volatile
  1150  00C6                     i1l808:
  1151                           
  1152                           ;main.c: 71:     if (INTCONbits.T0IF){
  1153  00C6  1D0B               	btfss	11,2	;volatile
  1154  00C7  28C9               	goto	u8_21
  1155  00C8  28CA               	goto	u8_20
  1156  00C9                     u8_21:
  1157  00C9  28E1               	goto	i1l828
  1158  00CA                     u8_20:
  1159  00CA                     i1l810:
  1160                           
  1161                           ;main.c: 72:         PORTE = 0;
  1162  00CA  1283               	bcf	3,5	;RP0=0, select bank0
  1163  00CB  1303               	bcf	3,6	;RP1=0, select bank0
  1164  00CC  0189               	clrf	9	;volatile
  1165  00CD                     i1l812:
  1166                           
  1167                           ;main.c: 73:         if (PORTAbits.RA1 == 0){
  1168  00CD  1885               	btfsc	5,1	;volatile
  1169  00CE  28D0               	goto	u9_21
  1170  00CF  28D1               	goto	u9_20
  1171  00D0                     u9_21:
  1172  00D0  28D6               	goto	i1l89
  1173  00D1                     u9_20:
  1174  00D1                     i1l814:
  1175                           
  1176                           ;main.c: 74:             PORTD = UNIT;
  1177  00D1  087C               	movf	_UNIT,w
  1178  00D2  0088               	movwf	8	;volatile
  1179  00D3                     i1l816:
  1180                           
  1181                           ;main.c: 75:             PORTEbits.RE0 = 1;
  1182  00D3  1409               	bsf	9,0	;volatile
  1183  00D4                     i1l818:
  1184                           
  1185                           ;main.c: 76:             PORTAbits.RA1 = 1;
  1186  00D4  1485               	bsf	5,1	;volatile
  1187                           
  1188                           ;main.c: 77:         }
  1189  00D5  28DE               	goto	i1l90
  1190  00D6                     i1l89:	
  1191                           ;main.c: 78:         else if(PORTAbits.RA1 == 1){
  1192                           
  1193  00D6  1C85               	btfss	5,1	;volatile
  1194  00D7  28D9               	goto	u10_21
  1195  00D8  28DA               	goto	u10_20
  1196  00D9                     u10_21:
  1197  00D9  28DE               	goto	i1l90
  1198  00DA                     u10_20:
  1199  00DA                     i1l820:
  1200                           
  1201                           ;main.c: 79:             PORTD = DEC;
  1202  00DA  087B               	movf	_DEC,w
  1203  00DB  0088               	movwf	8	;volatile
  1204  00DC                     i1l822:
  1205                           
  1206                           ;main.c: 80:             PORTEbits.RE1 = 1;
  1207  00DC  1489               	bsf	9,1	;volatile
  1208  00DD                     i1l824:
  1209                           
  1210                           ;main.c: 81:             PORTAbits.RA1 = 0;
  1211  00DD  1085               	bcf	5,1	;volatile
  1212  00DE                     i1l90:
  1213                           
  1214                           ;main.c: 83:         TMR0 = 217;
  1215  00DE  30D9               	movlw	217
  1216  00DF  0081               	movwf	1	;volatile
  1217  00E0                     i1l826:
  1218                           
  1219                           ;main.c: 84:         INTCONbits.T0IF = 0;
  1220  00E0  110B               	bcf	11,2	;volatile
  1221  00E1                     i1l828:
  1222                           
  1223                           ;main.c: 86:         if(PIR1bits.ADIF){
  1224  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  1225  00E2  1303               	bcf	3,6	;RP1=0, select bank0
  1226  00E3  1F0C               	btfss	12,6	;volatile
  1227  00E4  28E6               	goto	u11_21
  1228  00E5  28E7               	goto	u11_20
  1229  00E6                     u11_21:
  1230  00E6  28EC               	goto	i1l93
  1231  00E7                     u11_20:
  1232  00E7                     i1l830:
  1233                           
  1234                           ;main.c: 87:             ADC_R = ADRESH;
  1235  00E7  081E               	movf	30,w	;volatile
  1236  00E8  00F0               	movwf	??_ISR
  1237  00E9  0870               	movf	??_ISR,w
  1238  00EA  00FA               	movwf	_ADC_R
  1239  00EB                     i1l832:
  1240                           
  1241                           ;main.c: 88:             PIR1bits.ADIF = 0;
  1242  00EB  130C               	bcf	12,6	;volatile
  1243  00EC                     i1l93:
  1244  00EC  0872               	movf	??_ISR+2,w
  1245  00ED  008A               	movwf	10
  1246  00EE  0E71               	swapf	??_ISR+1,w
  1247  00EF  0083               	movwf	3
  1248  00F0  0EFE               	swapf	btemp,f
  1249  00F1  0E7E               	swapf	btemp,w
  1250  00F2  0009               	retfie
  1251  00F3                     __end_of_ISR:
  1252  007E                     btemp	set	126	;btemp
  1253  007E                     wtemp0	set	126
  1254                           
  1255                           	psect	intentry
  1256  0004                     __pintentry:	
  1257                           ;incstack = 0
  1258                           ; Regs used in _ISR: [wreg+status,2+status,0]
  1259                           
  1260  0004                     interrupt_function:
  1261  007E                     saved_w	set	btemp
  1262  0004  00FE               	movwf	btemp
  1263  0005  0E03               	swapf	3,w
  1264  0006  00F1               	movwf	??_ISR+1
  1265  0007  080A               	movf	10,w
  1266  0008  00F2               	movwf	??_ISR+2
  1267  0009  120A  118A  28B1   	ljmp	_ISR
  1268                           
  1269                           	psect	config
  1270                           
  1271                           ;Config register CONFIG1 @ 0x2007
  1272                           ;	Oscillator Selection bits
  1273                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1274                           ;	Watchdog Timer Enable bit
  1275                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1276                           ;	Power-up Timer Enable bit
  1277                           ;	PWRTE = OFF, PWRT disabled
  1278                           ;	RE3/MCLR pin function select bit
  1279                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1280                           ;	Code Protection bit
  1281                           ;	CP = OFF, Program memory code protection is disabled
  1282                           ;	Data Code Protection bit
  1283                           ;	CPD = OFF, Data memory code protection is disabled
  1284                           ;	Brown Out Reset Selection bits
  1285                           ;	BOREN = OFF, BOR disabled
  1286                           ;	Internal External Switchover bit
  1287                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1288                           ;	Fail-Safe Clock Monitor Enabled bit
  1289                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1290                           ;	Low Voltage Programming Enable bit
  1291                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1292                           ;	In-Circuit Debugger Mode bit
  1293                           ;	DEBUG = 0x1, unprogrammed default
  1294  2007                     	org	8199
  1295  2007  20D4               	dw	8404
  1296                           
  1297                           ;Config register CONFIG2 @ 0x2008
  1298                           ;	Brown-out Reset Selection bit
  1299                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1300                           ;	Flash Program Memory Self Write Enable bits
  1301                           ;	WRT = OFF, Write protection off
  1302  2008                     	org	8200
  1303  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      13
    BANK0            80      0      16
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_SEG_HEX

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      30
                                              6 COMMON     2     2      0
                          _ADC_START
                            _SEG_HEX
                         _configTMR0
                         _initCONFIG
 ---------------------------------------------------------------------------------
 (1) _initCONFIG                                           1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _configTMR0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SEG_HEX                                              3     3      0      30
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_START                                            1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_START
   _SEG_HEX
   _configTMR0
   _initCONFIG

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      10       5       20.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1D      12        0.0%
ABS                  0      0      1D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Jul 21 23:47:54 2021

     __size_of_ADC_START 0011                        _x 0079                        _y 0078  
                      pc 0002                       l77 0033                       l96 00B0  
                     l99 0132                       u10 010C                       u11 010B  
                     u30 0067                       u31 0063                       u25 0040  
                     u44 006A                       fsr 0004                      l112 013D  
                    l107 0116                      l710 0084                      l720 008B  
                    l712 0087                      l704 006E                      l730 0097  
                    l722 008E                      l714 0088                      l706 0077  
                    l740 009E                      l732 0099                      l724 0091  
                    l716 0089                      l708 007F                      _DEC 007B  
                    l750 00A6                      l742 00A1                      l734 009B  
                    l726 0092                      l718 008A                      l760 0127  
                    l752 00A9                      l744 00A3                      l736 009C  
                    l728 0093                      l770 010E                      l762 012E  
                    l754 00AB                      l746 00A4                      l738 009D  
                    l772 0113                      l756 00AE                      l748 00A5  
                    l766 0106                      l790 004A                      l782 0026  
                    l768 010C                      l776 0134                      l792 0053  
                    l784 002B                      l778 013C                      l794 005C  
                    l786 0038                      l788 003D                      u127 0081  
                    u137 0110                      _ISR 00B1                      fsr0 0004  
                    indf 0000                     ?_ISR 0070                     _IOCB 0096  
                   i1l90 00DE                     i1l93 00EC                     i1l89 00D6  
                   _TMR0 0001          __end_of_SEG_HEX 013E                     _UNIT 007C  
                   _WPUB 0095                     u5_20 00B5                     u5_21 00B4  
                   u6_20 00BB                     u6_21 00BA                     u7_20 00C3  
                   u7_21 00C2                     u8_20 00CA                     u8_21 00C9  
                   u9_20 00D1                     u9_21 00D0                     _main 0026  
                   btemp 007E                     start 000C                    ??_ISR 0070  
                  ?_main 0070                    _ADC_R 007A                    _ANSEL 0188  
                  i1l800 00BB                    i1l810 00CA                    i1l802 00BF  
                  i1l820 00DA                    i1l812 00CD                    i1l804 00C3  
                  i1l830 00E7                    i1l822 00DC                    i1l814 00D1  
                  i1l806 00C5                    i1l832 00EB                    i1l824 00DD  
                  i1l816 00D3                    i1l808 00C6                    i1l826 00E0  
                  i1l818 00D4                    i1l828 00E1                    i1l796 00B1  
                  i1l798 00B5                    u10_20 00DA                    u10_21 00D9  
                  u11_20 00E7                    u11_21 00E6                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
      __end_of_ADC_START 0117                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 006E  
                 ??_main 0076                ??_SEG_HEX 0073                   _ADRESH 001E  
                 _ANSELH 0189                   saved_w 007E  __end_of__initialization 0022  
         __pcstackCOMMON 0070             __pidataBANK0 0117           _OPTION_REGbits 0081  
             __pmaintext 0026               __pintentry 0004               _configTMR0 0127  
                _SEG_HEX 0133                  _T_TABLE 0020               _initCONFIG 006E  
              _ADC_START 0106                  __ptext1 006E                  __ptext2 0127  
                __ptext3 0133                  __ptext4 0106                  __ptext5 00B1  
           __size_of_ISR 0042     end_of_initialization 0022               ?_ADC_START 0070  
              _PORTAbits 0005                _PORTBbits 0006                _PORTEbits 0009  
            ?_configTMR0 0070              ?_initCONFIG 0070      start_initialization 000F  
            __end_of_ISR 00F3              ??_ADC_START 0073      __size_of_configTMR0 000C  
             init_fetch0 00F3              __pdataBANK0 0020      __size_of_initCONFIG 0043  
            __pbssCOMMON 0078                ___latbits 0002                 ?_SEG_HEX 0070  
             SEG_HEX@FER 0075               SEG_HEX@VAR 0074        interrupt_function 0004  
               _PIE1bits 008C                 _PIR1bits 000C               _ADCON0bits 001F  
             _ADCON1bits 009F             ??_configTMR0 0073         __size_of_SEG_HEX 000B  
           ??_initCONFIG 0073       __end_of_configTMR0 0133       __end_of_initCONFIG 00B1  
          __size_of_main 0048               _INTCONbits 000B                 init_ram0 00F7  
               intlevel1 0000               _OSCCONbits 008F  
